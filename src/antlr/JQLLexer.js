// Generated from ../JQL.g4 by ANTLR 4.9.2
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u000ff\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0003\u0002\u0006\u0002\u001f",
    "\n\u0002\r\u0002\u000e\u0002 \u0003\u0003\u0003\u0003\u0003\u0003\u0005",
    "\u0003&\n\u0003\u0003\u0004\u0003\u0004\u0003\u0004\u0005\u0004+\n\u0004",
    "\u0003\u0005\u0003\u0005\u0003\u0005\u0005\u00050\n\u0005\u0003\u0006",
    "\u0003\u0006\u0003\u0006\u0005\u00065\n\u0006\u0003\u0007\u0003\u0007",
    "\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003\n\u0003\n\u0003\n\u0003",
    "\u000b\u0006\u000bB\n\u000b\r\u000b\u000e\u000bC\u0003\u000b\u0003\u000b",
    "\u0003\f\u0005\fI\n\f\u0003\f\u0006\fL\n\f\r\f\u000e\fM\u0003\r\u0005",
    "\rQ\n\r\u0003\r\u0006\rT\n\r\r\r\u000e\rU\u0003\r\u0003\r\u0006\rZ\n",
    "\r\r\r\u000e\r[\u0003\u000e\u0003\u000e\u0007\u000e`\n\u000e\f\u000e",
    "\u000e\u000ec\u000b\u000e\u0003\u000e\u0003\u000e\u0003a\u0002\u000f",
    "\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t",
    "\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u0003\u0002",
    "\u0005\u0004\u0002C\\c|\u0005\u0002\u000b\f\u000f\u000f\"\"\u0003\u0002",
    "2;\u0002q\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002",
    "\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002",
    "\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002",
    "\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002",
    "\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002",
    "\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002",
    "\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0003\u001e\u0003\u0002",
    "\u0002\u0002\u0005%\u0003\u0002\u0002\u0002\u0007*\u0003\u0002\u0002",
    "\u0002\t/\u0003\u0002\u0002\u0002\u000b4\u0003\u0002\u0002\u0002\r6",
    "\u0003\u0002\u0002\u0002\u000f8\u0003\u0002\u0002\u0002\u0011:\u0003",
    "\u0002\u0002\u0002\u0013=\u0003\u0002\u0002\u0002\u0015A\u0003\u0002",
    "\u0002\u0002\u0017H\u0003\u0002\u0002\u0002\u0019P\u0003\u0002\u0002",
    "\u0002\u001b]\u0003\u0002\u0002\u0002\u001d\u001f\t\u0002\u0002\u0002",
    "\u001e\u001d\u0003\u0002\u0002\u0002\u001f \u0003\u0002\u0002\u0002",
    " \u001e\u0003\u0002\u0002\u0002 !\u0003\u0002\u0002\u0002!\u0004\u0003",
    "\u0002\u0002\u0002\"&\u0007(\u0002\u0002#$\u0007(\u0002\u0002$&\u0007",
    "(\u0002\u0002%\"\u0003\u0002\u0002\u0002%#\u0003\u0002\u0002\u0002&",
    "\u0006\u0003\u0002\u0002\u0002\'+\u0007~\u0002\u0002()\u0007~\u0002",
    "\u0002)+\u0007~\u0002\u0002*\'\u0003\u0002\u0002\u0002*(\u0003\u0002",
    "\u0002\u0002+\b\u0003\u0002\u0002\u0002,0\u0007?\u0002\u0002-.\u0007",
    "?\u0002\u0002.0\u0007?\u0002\u0002/,\u0003\u0002\u0002\u0002/-\u0003",
    "\u0002\u0002\u00020\n\u0003\u0002\u0002\u000215\u0007\u0080\u0002\u0002",
    "23\u0007\u0080\u0002\u000235\u0007\u0080\u0002\u000241\u0003\u0002\u0002",
    "\u000242\u0003\u0002\u0002\u00025\f\u0003\u0002\u0002\u000267\u0007",
    ">\u0002\u00027\u000e\u0003\u0002\u0002\u000289\u0007@\u0002\u00029\u0010",
    "\u0003\u0002\u0002\u0002:;\u0007>\u0002\u0002;<\u0007?\u0002\u0002<",
    "\u0012\u0003\u0002\u0002\u0002=>\u0007@\u0002\u0002>?\u0007?\u0002\u0002",
    "?\u0014\u0003\u0002\u0002\u0002@B\t\u0003\u0002\u0002A@\u0003\u0002",
    "\u0002\u0002BC\u0003\u0002\u0002\u0002CA\u0003\u0002\u0002\u0002CD\u0003",
    "\u0002\u0002\u0002DE\u0003\u0002\u0002\u0002EF\b\u000b\u0002\u0002F",
    "\u0016\u0003\u0002\u0002\u0002GI\u0007/\u0002\u0002HG\u0003\u0002\u0002",
    "\u0002HI\u0003\u0002\u0002\u0002IK\u0003\u0002\u0002\u0002JL\t\u0004",
    "\u0002\u0002KJ\u0003\u0002\u0002\u0002LM\u0003\u0002\u0002\u0002MK\u0003",
    "\u0002\u0002\u0002MN\u0003\u0002\u0002\u0002N\u0018\u0003\u0002\u0002",
    "\u0002OQ\u0007/\u0002\u0002PO\u0003\u0002\u0002\u0002PQ\u0003\u0002",
    "\u0002\u0002QS\u0003\u0002\u0002\u0002RT\t\u0004\u0002\u0002SR\u0003",
    "\u0002\u0002\u0002TU\u0003\u0002\u0002\u0002US\u0003\u0002\u0002\u0002",
    "UV\u0003\u0002\u0002\u0002VW\u0003\u0002\u0002\u0002WY\u00070\u0002",
    "\u0002XZ\t\u0004\u0002\u0002YX\u0003\u0002\u0002\u0002Z[\u0003\u0002",
    "\u0002\u0002[Y\u0003\u0002\u0002\u0002[\\\u0003\u0002\u0002\u0002\\",
    "\u001a\u0003\u0002\u0002\u0002]a\u0007$\u0002\u0002^`\u000b\u0002\u0002",
    "\u0002_^\u0003\u0002\u0002\u0002`c\u0003\u0002\u0002\u0002ab\u0003\u0002",
    "\u0002\u0002a_\u0003\u0002\u0002\u0002bd\u0003\u0002\u0002\u0002ca\u0003",
    "\u0002\u0002\u0002de\u0007$\u0002\u0002e\u001c\u0003\u0002\u0002\u0002",
    "\u000f\u0002 %*/4CHMPU[a\u0003\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class JQLLexer extends antlr4.Lexer {

    static grammarFileName = "JQL.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, null, null, null, null, "'<'", "'>'", 
                         "'<='", "'>='" ];
	static symbolicNames = [ null, "KEY", "AND", "OR", "EQ", "CONTAINS", "LT", 
                          "GT", "LTE", "GTE", "WS", "INT", "FLOAT", "STRING" ];
	static ruleNames = [ "KEY", "AND", "OR", "EQ", "CONTAINS", "LT", "GT", 
                      "LTE", "GTE", "WS", "INT", "FLOAT", "STRING" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

JQLLexer.EOF = antlr4.Token.EOF;
JQLLexer.KEY = 1;
JQLLexer.AND = 2;
JQLLexer.OR = 3;
JQLLexer.EQ = 4;
JQLLexer.CONTAINS = 5;
JQLLexer.LT = 6;
JQLLexer.GT = 7;
JQLLexer.LTE = 8;
JQLLexer.GTE = 9;
JQLLexer.WS = 10;
JQLLexer.INT = 11;
JQLLexer.FLOAT = 12;
JQLLexer.STRING = 13;



