// Generated from JQL.g4 by ANTLR 4.9.2
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u000ff\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0003\u0002\u0003\u0002\u0003",
    "\u0002\u0005\u0002!\n\u0002\u0003\u0003\u0003\u0003\u0003\u0003\u0005",
    "\u0003&\n\u0003\u0003\u0004\u0003\u0004\u0003\u0004\u0005\u0004+\n\u0004",
    "\u0003\u0005\u0003\u0005\u0003\u0005\u0005\u00050\n\u0005\u0003\u0006",
    "\u0003\u0006\u0003\u0007\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003",
    "\t\u0003\t\u0003\t\u0003\n\u0006\n=\n\n\r\n\u000e\n>\u0003\n\u0003\n",
    "\u0003\u000b\u0005\u000bD\n\u000b\u0003\u000b\u0006\u000bG\n\u000b\r",
    "\u000b\u000e\u000bH\u0003\f\u0005\fL\n\f\u0003\f\u0006\fO\n\f\r\f\u000e",
    "\fP\u0003\f\u0003\f\u0006\fU\n\f\r\f\u000e\fV\u0003\r\u0003\r\u0007",
    "\r[\n\r\f\r\u000e\r^\u000b\r\u0003\r\u0003\r\u0003\u000e\u0006\u000e",
    "c\n\u000e\r\u000e\u000e\u000ed\u0003\\\u0002\u000f\u0003\u0003\u0005",
    "\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b",
    "\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u0003\u0002\u0005\u0005\u0002",
    "\u000b\f\u000f\u000f\"\"\u0003\u00022;\u0004\u0002C\\c|\u0002q\u0002",
    "\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002",
    "\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002",
    "\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002",
    "\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002",
    "\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002",
    "\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002",
    "\u001b\u0003\u0002\u0002\u0002\u0003 \u0003\u0002\u0002\u0002\u0005",
    "%\u0003\u0002\u0002\u0002\u0007*\u0003\u0002\u0002\u0002\t/\u0003\u0002",
    "\u0002\u0002\u000b1\u0003\u0002\u0002\u0002\r3\u0003\u0002\u0002\u0002",
    "\u000f6\u0003\u0002\u0002\u0002\u00118\u0003\u0002\u0002\u0002\u0013",
    "<\u0003\u0002\u0002\u0002\u0015C\u0003\u0002\u0002\u0002\u0017K\u0003",
    "\u0002\u0002\u0002\u0019X\u0003\u0002\u0002\u0002\u001bb\u0003\u0002",
    "\u0002\u0002\u001d!\u0007(\u0002\u0002\u001e\u001f\u0007(\u0002\u0002",
    "\u001f!\u0007(\u0002\u0002 \u001d\u0003\u0002\u0002\u0002 \u001e\u0003",
    "\u0002\u0002\u0002!\u0004\u0003\u0002\u0002\u0002\"&\u0007~\u0002\u0002",
    "#$\u0007~\u0002\u0002$&\u0007~\u0002\u0002%\"\u0003\u0002\u0002\u0002",
    "%#\u0003\u0002\u0002\u0002&\u0006\u0003\u0002\u0002\u0002\'+\u0007?",
    "\u0002\u0002()\u0007?\u0002\u0002)+\u0007?\u0002\u0002*\'\u0003\u0002",
    "\u0002\u0002*(\u0003\u0002\u0002\u0002+\b\u0003\u0002\u0002\u0002,0",
    "\u0007\u0080\u0002\u0002-.\u0007\u0080\u0002\u0002.0\u0007\u0080\u0002",
    "\u0002/,\u0003\u0002\u0002\u0002/-\u0003\u0002\u0002\u00020\n\u0003",
    "\u0002\u0002\u000212\u0007@\u0002\u00022\f\u0003\u0002\u0002\u00023",
    "4\u0007@\u0002\u000245\u0007?\u0002\u00025\u000e\u0003\u0002\u0002\u0002",
    "67\u0007>\u0002\u00027\u0010\u0003\u0002\u0002\u000289\u0007>\u0002",
    "\u00029:\u0007?\u0002\u0002:\u0012\u0003\u0002\u0002\u0002;=\t\u0002",
    "\u0002\u0002<;\u0003\u0002\u0002\u0002=>\u0003\u0002\u0002\u0002><\u0003",
    "\u0002\u0002\u0002>?\u0003\u0002\u0002\u0002?@\u0003\u0002\u0002\u0002",
    "@A\b\n\u0002\u0002A\u0014\u0003\u0002\u0002\u0002BD\u0007/\u0002\u0002",
    "CB\u0003\u0002\u0002\u0002CD\u0003\u0002\u0002\u0002DF\u0003\u0002\u0002",
    "\u0002EG\t\u0003\u0002\u0002FE\u0003\u0002\u0002\u0002GH\u0003\u0002",
    "\u0002\u0002HF\u0003\u0002\u0002\u0002HI\u0003\u0002\u0002\u0002I\u0016",
    "\u0003\u0002\u0002\u0002JL\u0007/\u0002\u0002KJ\u0003\u0002\u0002\u0002",
    "KL\u0003\u0002\u0002\u0002LN\u0003\u0002\u0002\u0002MO\t\u0003\u0002",
    "\u0002NM\u0003\u0002\u0002\u0002OP\u0003\u0002\u0002\u0002PN\u0003\u0002",
    "\u0002\u0002PQ\u0003\u0002\u0002\u0002QR\u0003\u0002\u0002\u0002RT\u0007",
    "0\u0002\u0002SU\t\u0003\u0002\u0002TS\u0003\u0002\u0002\u0002UV\u0003",
    "\u0002\u0002\u0002VT\u0003\u0002\u0002\u0002VW\u0003\u0002\u0002\u0002",
    "W\u0018\u0003\u0002\u0002\u0002X\\\u0007$\u0002\u0002Y[\u000b\u0002",
    "\u0002\u0002ZY\u0003\u0002\u0002\u0002[^\u0003\u0002\u0002\u0002\\]",
    "\u0003\u0002\u0002\u0002\\Z\u0003\u0002\u0002\u0002]_\u0003\u0002\u0002",
    "\u0002^\\\u0003\u0002\u0002\u0002_`\u0007$\u0002\u0002`\u001a\u0003",
    "\u0002\u0002\u0002ac\t\u0004\u0002\u0002ba\u0003\u0002\u0002\u0002c",
    "d\u0003\u0002\u0002\u0002db\u0003\u0002\u0002\u0002de\u0003\u0002\u0002",
    "\u0002e\u001c\u0003\u0002\u0002\u0002\u000f\u0002 %*/>CHKPV\\d\u0003",
    "\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class JQLLexer extends antlr4.Lexer {

    static grammarFileName = "JQL.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, null, null, null, "'>'", "'>='", "'<'", 
                         "'<='" ];
	static symbolicNames = [ null, "AND", "OR", "EQ", "CONTAINS", "GT", "GTE", 
                          "LT", "LTE", "WS", "INT", "FLOAT", "STRING", "ID" ];
	static ruleNames = [ "AND", "OR", "EQ", "CONTAINS", "GT", "GTE", "LT", 
                      "LTE", "WS", "INT", "FLOAT", "STRING", "ID" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

JQLLexer.EOF = antlr4.Token.EOF;
JQLLexer.AND = 1;
JQLLexer.OR = 2;
JQLLexer.EQ = 3;
JQLLexer.CONTAINS = 4;
JQLLexer.GT = 5;
JQLLexer.GTE = 6;
JQLLexer.LT = 7;
JQLLexer.LTE = 8;
JQLLexer.WS = 9;
JQLLexer.INT = 10;
JQLLexer.FLOAT = 11;
JQLLexer.STRING = 12;
JQLLexer.ID = 13;



